apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: hosts-update
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: hosts-update
  template:
    metadata:
      labels:
        app: hosts-update
    spec:
      hostNetwork: true
      initContainers:
        - name: hosts-update-init
          image: busybox:latest
          command:
            - sh
            - -c
            - |
              if ! grep -q "{{.HarborHostname}}" /etc/hosts; then
                echo "Adding entry to /etc/hosts"
                echo "{{.HarborIP}}  {{.HarborHostname}}" >> /host/etc/hosts
              fi
          securityContext:
            privileged: true
          volumeMounts:
            - name: host-etc
              mountPath: /host/etc
      containers:
        - name: hosts-update
          image: busybox:latest
          command:
            - sleep
            - infinity
          securityContext:
            privileged: true
      volumes:
        - name: host-etc
          hostPath:
            path: /etc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: setup-script
  namespace: kube-system
data:
  setup.sh: |
    echo "$TRUSTED_CERT" > /usr/local/share/ca-certificates/ca.crt && update-ca-certificates && systemctl restart containerd
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-custom-setup
  namespace: kube-system
  labels:
    k8s-app: node-custom-setup
spec:
  selector:
    matchLabels:
      k8s-app: node-custom-setup
  template:
    metadata:
      labels:
        k8s-app: node-custom-setup
    spec:
      hostPID: true
      hostNetwork: true
      initContainers:
        - name: init-node
          command: ["nsenter"]
          args: ["--mount=/proc/1/ns/mnt", "--", "sh", "-c", "$(SETUP_SCRIPT)"]
          image: debian
          env:
            - name: TRUSTED_CERT
              valueFrom:
                configMapKeyRef:
                  name: trusted-ca
                  key: ca.crt
            - name: SETUP_SCRIPT
              valueFrom:
                configMapKeyRef:
                  name: setup-script
                  key: setup.sh
          securityContext:
            privileged: true
      containers:
        - name: wait
          image: k8s.gcr.io/pause:3.1
