apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  namespace: katana
  labels:
    type: local
spec:
  persistentVolumeReclaimPolicy: Delete
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  local:
    path: /data/mysql
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ .NodeAffinityValue }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: katana
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: katana
spec:
  selector:
    matchLabels:
      lbtype: external
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        lbtype: external
        app: mysql
    spec:
      containers:
      - image: mysql:5.7 #Change this image to match the version of MySQL you are using
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
          
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mysql
  name: mysql-svc
  namespace: katana
spec:
  ports:
    - name: mysql-port
      port: 3306
      targetPort: 3306
  selector:
    app: mysql

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: katana
type: kubernetes.io/basic-auth
stringData:
  password: {{.MySQLPassword}}
