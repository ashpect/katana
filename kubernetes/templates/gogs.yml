apiVersion: v1
kind: PersistentVolume
metadata:
  name: gogs-pv
  namespace: katana
  labels:
    type: local
spec:
  persistentVolumeReclaimPolicy: Delete
  storageClassName: gogs-storage
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 2Gi
  local:
    path: /mnt/gogs
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ .NodeAffinityValue }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gogs-pv-claim
  namespace: katana
  labels:
    app: gogs
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gogs-storage
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gogs
  namespace: katana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gogs
      lbtype: external
  template:
    metadata:
      labels:
        lbtype: external
        app: gogs
        version: v1
    spec:
      containers:
        - name: gogs
          image: gogs/gogs:0.13
          ports:
            - containerPort: 22
              name: ssh
            - containerPort: 3000
              name: gogs-port
          env:
            - name: SOCAT_LINK
              value: "false"
          volumeMounts:
            - name: gogs-persistent-storage
              mountPath: /mnt
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - nohup sh -c "if [ ! -f /data/gogs/conf/app.ini ]; then while [ ! -f /data/gogs/conf/app.ini ]; do sleep 1; done; sleep 10; echo 'LOCAL_NETWORK_ALLOWLIST = *' >> /data/gogs/conf/app.ini; pkill -P $$; fi" > /dev/null 2>&1 &
      volumes:
        - name: gogs-persistent-storage
          persistentVolumeClaim:
            claimName: gogs-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: gogs-svc
  namespace: katana
spec:
  selector:
    app: gogs
  ports:
    - name: ssh
      protocol: TCP
      port: 10022
      targetPort: 22
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000
